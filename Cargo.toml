[package]
authors = ["moririn"]
edition = "2018"
readme = "README.md"
name = "test0"
version = "0.1.0"

#[dependencies]
#cortex-m = { version = "0.7", features = ["critical-section-single-core"] }
#cortex-m-semihosting = "0.5"
# Uncomment for the panic example.
# panic-itm = "0.4.1"

[dependencies]
# Only set the critical section feature, if you are using a bare-metal platform
# without any RTOS
# See https://github.com/rust-embedded/critical-section for further details.
cortex-m = { version = "0.7.4", features = ["critical-section-single-core"]}
cortex-m-rt = { version = "0.7.3", features = ["device"] }
# Panic behavior, see https://crates.io/keywords/panic-impl for alternatives
panic-halt = "0.2.0"
# Replace stm32f303xc with your target chip, see next section for more info
stm32f3xx-hal = { version = "0.10.0", features = ["ld", "rt", "stm32f303xc"] }

# Uncomment for the allocator example.
# embedded-alloc = "0.6.0"

# Uncomment for the device example.
# Update `memory.x`, set target to `thumbv7em-none-eabihf` in `.cargo/config`,
# and then use `cargo build --example device` to build it.
[dependencies.stm32f3]
features = ["stm32f303", "rt"]
version = "0.15"

# this lets you use `cargo fix`!
[[bin]]
name = "test0"
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations
